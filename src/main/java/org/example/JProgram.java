package org.example;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import java.io.IOException;
/**
 *
 * @author kzsbv
 */
public class JProgram extends javax.swing.JFrame {

    private XSLXManipulation xm = new XSLXManipulation();
    /**
     * Creates new form JProgram
     */
    public JProgram() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanelWindow = new javax.swing.JPanel();
        jButtonImport = new javax.swing.JButton();
        jButtonImportNewFile = new javax.swing.JButton();
        jButtonExport = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jLabelImport = new javax.swing.JLabel();
        jLabelImportNewFile = new javax.swing.JLabel();
        jLabelExport = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonImport.setText("Импорт из файла с вариантами");
        jButtonImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImportActionPerformed(evt);
            }
        });

        jButtonImportNewFile.setText("Импорт из созданного файла");
        jButtonImportNewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImportNewFileActionPerformed(evt);
            }
        });

        jButtonExport.setText("Экспорт файла с результатами");
        jButtonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportActionPerformed(evt);
            }
        });

        jButtonExit.setText("Выход");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jLabelImport.setText("Данные не загружены");

        jLabelImportNewFile.setText("Данные не загружены");

        jLabelExport.setText("Данные не выгружены");

        javax.swing.GroupLayout jPanelWindowLayout = new javax.swing.GroupLayout(jPanelWindow);
        jPanelWindow.setLayout(jPanelWindowLayout);
        jPanelWindowLayout.setHorizontalGroup(
                jPanelWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelWindowLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(jPanelWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jButtonImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonImportNewFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(54, 54, 54)
                                .addGroup(jPanelWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelImport)
                                        .addComponent(jLabelImportNewFile)
                                        .addComponent(jLabelExport))
                                .addContainerGap(36, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelWindowLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonExit)
                                .addGap(59, 59, 59))
        );
        jPanelWindowLayout.setVerticalGroup(
                jPanelWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelWindowLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanelWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonImport)
                                        .addComponent(jLabelImport))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonImportNewFile)
                                        .addComponent(jLabelImportNewFile))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonExport)
                                        .addComponent(jLabelExport))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addComponent(jButtonExit)
                                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanelWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanelWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }

    private void jButtonImportActionPerformed(java.awt.event.ActionEvent evt) {
        if (jLabelImport.getText().equals("Данные загружены")) JOptionPane.showMessageDialog (null, "Данные уже получены!", "Oшибка", JOptionPane.ERROR_MESSAGE);
        else {
            try {
                xm.setData("ДЗ4.xlsx");
                jLabelImport.setText("Данные загружены");
                jLabelImportNewFile.setText("Данные не загружены");
                jLabelExport.setText("Данные не выгружены");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Oшибка", JOptionPane.ERROR_MESSAGE);
                jLabelImport.setText("Данные не загружены");
            }
        }
    }

    private void jButtonImportNewFileActionPerformed(java.awt.event.ActionEvent evt) {
        if (jLabelImportNewFile.getText().equals("Данные загружены")) JOptionPane.showMessageDialog (null, "Данные уже получены!", "Oшибка", JOptionPane.ERROR_MESSAGE);
        else {
            try {
                xm.setData("Sample.xlsx");
                jLabelImportNewFile.setText("Данные загружены");
                jLabelImport.setText("Данные не загружены");
                jLabelExport.setText("Данные не выгружены");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Oшибка", JOptionPane.ERROR_MESSAGE);
                jLabelImportNewFile.setText("Данные не загружены");
            }
        }
    }


    private void jButtonExportActionPerformed(java.awt.event.ActionEvent evt) {
        if (jLabelImport.getText().equals("Данные не загружены")&&jLabelImportNewFile.getText().equals("Данные не загружены")) JOptionPane.showMessageDialog (null, "Данные еще не получены!", "Oшибка", JOptionPane.ERROR_MESSAGE);
        else if (jLabelExport.getText().equals("Данные выгружены")) JOptionPane.showMessageDialog (null, "Данные уже выгружены!", "Oшибка", JOptionPane.ERROR_MESSAGE);
        else {
            try {
                xm.writeResultsToExcel("./Result.xlsx");
                jLabelExport.setText("Данные выгружены");
            } catch (IOException e) {
                JOptionPane.showMessageDialog (null, e.getMessage(), "Oшибка", JOptionPane.ERROR_MESSAGE);
            }
        }
    }


    // Variables declaration - do not modify
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonExport;
    private javax.swing.JButton jButtonImport;
    private javax.swing.JButton jButtonImportNewFile;
    private javax.swing.JLabel jLabelExport;
    private javax.swing.JLabel jLabelImport;
    private javax.swing.JLabel jLabelImportNewFile;
    private javax.swing.JPanel jPanelWindow;
    // End of variables declaration
}
